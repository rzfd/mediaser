// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/media_share.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums
type MediaType int32

const (
	MediaType_MEDIA_TYPE_UNSPECIFIED MediaType = 0
	MediaType_MEDIA_TYPE_YOUTUBE     MediaType = 1
	MediaType_MEDIA_TYPE_TIKTOK      MediaType = 2
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_UNSPECIFIED",
		1: "MEDIA_TYPE_YOUTUBE",
		2: "MEDIA_TYPE_TIKTOK",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_UNSPECIFIED": 0,
		"MEDIA_TYPE_YOUTUBE":     1,
		"MEDIA_TYPE_TIKTOK":      2,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_media_share_proto_enumTypes[0].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_proto_media_share_proto_enumTypes[0]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{0}
}

type MediaStatus int32

const (
	MediaStatus_MEDIA_STATUS_UNSPECIFIED MediaStatus = 0
	MediaStatus_MEDIA_STATUS_PENDING     MediaStatus = 1
	MediaStatus_MEDIA_STATUS_APPROVED    MediaStatus = 2
	MediaStatus_MEDIA_STATUS_REJECTED    MediaStatus = 3
	MediaStatus_MEDIA_STATUS_PLAYED      MediaStatus = 4
)

// Enum value maps for MediaStatus.
var (
	MediaStatus_name = map[int32]string{
		0: "MEDIA_STATUS_UNSPECIFIED",
		1: "MEDIA_STATUS_PENDING",
		2: "MEDIA_STATUS_APPROVED",
		3: "MEDIA_STATUS_REJECTED",
		4: "MEDIA_STATUS_PLAYED",
	}
	MediaStatus_value = map[string]int32{
		"MEDIA_STATUS_UNSPECIFIED": 0,
		"MEDIA_STATUS_PENDING":     1,
		"MEDIA_STATUS_APPROVED":    2,
		"MEDIA_STATUS_REJECTED":    3,
		"MEDIA_STATUS_PLAYED":      4,
	}
)

func (x MediaStatus) Enum() *MediaStatus {
	p := new(MediaStatus)
	*p = x
	return p
}

func (x MediaStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_media_share_proto_enumTypes[1].Descriptor()
}

func (MediaStatus) Type() protoreflect.EnumType {
	return &file_proto_media_share_proto_enumTypes[1]
}

func (x MediaStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaStatus.Descriptor instead.
func (MediaStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{1}
}

// Settings Messages
type GetSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamerId    uint32                 `protobuf:"varint,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSettingsRequest) Reset() {
	*x = GetSettingsRequest{}
	mi := &file_proto_media_share_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsRequest) ProtoMessage() {}

func (x *GetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{0}
}

func (x *GetSettingsRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

type GetSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settings      *MediaShareSettings    `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSettingsResponse) Reset() {
	*x = GetSettingsResponse{}
	mi := &file_proto_media_share_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse) ProtoMessage() {}

func (x *GetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{1}
}

func (x *GetSettingsResponse) GetSettings() *MediaShareSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamerId    uint32                 `protobuf:"varint,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	Settings      *MediaShareSettings    `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSettingsRequest) Reset() {
	*x = UpdateSettingsRequest{}
	mi := &file_proto_media_share_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingsRequest) ProtoMessage() {}

func (x *UpdateSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSettingsRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

func (x *UpdateSettingsRequest) GetSettings() *MediaShareSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Settings      *MediaShareSettings    `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSettingsResponse) Reset() {
	*x = UpdateSettingsResponse{}
	mi := &file_proto_media_share_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingsResponse) ProtoMessage() {}

func (x *UpdateSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateSettingsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSettingsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSettingsResponse) GetSettings() *MediaShareSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type MediaShareSettings struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamerId         uint32                 `protobuf:"varint,2,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	Enabled            bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MinDonationAmount  float64                `protobuf:"fixed64,4,opt,name=min_donation_amount,json=minDonationAmount,proto3" json:"min_donation_amount,omitempty"`
	YoutubeEnabled     bool                   `protobuf:"varint,5,opt,name=youtube_enabled,json=youtubeEnabled,proto3" json:"youtube_enabled,omitempty"`
	TiktokEnabled      bool                   `protobuf:"varint,6,opt,name=tiktok_enabled,json=tiktokEnabled,proto3" json:"tiktok_enabled,omitempty"`
	AutoApprove        bool                   `protobuf:"varint,7,opt,name=auto_approve,json=autoApprove,proto3" json:"auto_approve,omitempty"`
	MaxDurationSeconds uint32                 `protobuf:"varint,8,opt,name=max_duration_seconds,json=maxDurationSeconds,proto3" json:"max_duration_seconds,omitempty"`
	WelcomeMessage     string                 `protobuf:"bytes,9,opt,name=welcome_message,json=welcomeMessage,proto3" json:"welcome_message,omitempty"`
	CreatedAt          *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MediaShareSettings) Reset() {
	*x = MediaShareSettings{}
	mi := &file_proto_media_share_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaShareSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaShareSettings) ProtoMessage() {}

func (x *MediaShareSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaShareSettings.ProtoReflect.Descriptor instead.
func (*MediaShareSettings) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{4}
}

func (x *MediaShareSettings) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MediaShareSettings) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

func (x *MediaShareSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MediaShareSettings) GetMinDonationAmount() float64 {
	if x != nil {
		return x.MinDonationAmount
	}
	return 0
}

func (x *MediaShareSettings) GetYoutubeEnabled() bool {
	if x != nil {
		return x.YoutubeEnabled
	}
	return false
}

func (x *MediaShareSettings) GetTiktokEnabled() bool {
	if x != nil {
		return x.TiktokEnabled
	}
	return false
}

func (x *MediaShareSettings) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

func (x *MediaShareSettings) GetMaxDurationSeconds() uint32 {
	if x != nil {
		return x.MaxDurationSeconds
	}
	return 0
}

func (x *MediaShareSettings) GetWelcomeMessage() string {
	if x != nil {
		return x.WelcomeMessage
	}
	return ""
}

func (x *MediaShareSettings) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MediaShareSettings) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Media Share Messages
type SubmitMediaShareRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DonationId        uint32                 `protobuf:"varint,1,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	StreamerId        uint32                 `protobuf:"varint,2,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	DonatorId         uint32                 `protobuf:"varint,3,opt,name=donator_id,json=donatorId,proto3" json:"donator_id,omitempty"`
	DonatorName       string                 `protobuf:"bytes,4,opt,name=donator_name,json=donatorName,proto3" json:"donator_name,omitempty"`
	MediaType         MediaType              `protobuf:"varint,5,opt,name=media_type,json=mediaType,proto3,enum=mediashar.media_share.MediaType" json:"media_type,omitempty"`
	MediaUrl          string                 `protobuf:"bytes,6,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	CustomTitle       string                 `protobuf:"bytes,7,opt,name=custom_title,json=customTitle,proto3" json:"custom_title,omitempty"`
	CustomDescription string                 `protobuf:"bytes,8,opt,name=custom_description,json=customDescription,proto3" json:"custom_description,omitempty"`
	StartTime         uint32                 `protobuf:"varint,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime           uint32                 `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SubmitMediaShareRequest) Reset() {
	*x = SubmitMediaShareRequest{}
	mi := &file_proto_media_share_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitMediaShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitMediaShareRequest) ProtoMessage() {}

func (x *SubmitMediaShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitMediaShareRequest.ProtoReflect.Descriptor instead.
func (*SubmitMediaShareRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitMediaShareRequest) GetDonationId() uint32 {
	if x != nil {
		return x.DonationId
	}
	return 0
}

func (x *SubmitMediaShareRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

func (x *SubmitMediaShareRequest) GetDonatorId() uint32 {
	if x != nil {
		return x.DonatorId
	}
	return 0
}

func (x *SubmitMediaShareRequest) GetDonatorName() string {
	if x != nil {
		return x.DonatorName
	}
	return ""
}

func (x *SubmitMediaShareRequest) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *SubmitMediaShareRequest) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *SubmitMediaShareRequest) GetCustomTitle() string {
	if x != nil {
		return x.CustomTitle
	}
	return ""
}

func (x *SubmitMediaShareRequest) GetCustomDescription() string {
	if x != nil {
		return x.CustomDescription
	}
	return ""
}

func (x *SubmitMediaShareRequest) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SubmitMediaShareRequest) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type SubmitMediaShareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MediaId       uint32                 `protobuf:"varint,3,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Status        MediaStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=mediashar.media_share.MediaStatus" json:"status,omitempty"`
	QueuePosition uint32                 `protobuf:"varint,5,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitMediaShareResponse) Reset() {
	*x = SubmitMediaShareResponse{}
	mi := &file_proto_media_share_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitMediaShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitMediaShareResponse) ProtoMessage() {}

func (x *SubmitMediaShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitMediaShareResponse.ProtoReflect.Descriptor instead.
func (*SubmitMediaShareResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitMediaShareResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitMediaShareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubmitMediaShareResponse) GetMediaId() uint32 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

func (x *SubmitMediaShareResponse) GetStatus() MediaStatus {
	if x != nil {
		return x.Status
	}
	return MediaStatus_MEDIA_STATUS_UNSPECIFIED
}

func (x *SubmitMediaShareResponse) GetQueuePosition() uint32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

// Queue Messages
type GetMediaQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamerId    uint32                 `protobuf:"varint,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	StatusFilter  string                 `protobuf:"bytes,2,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"` // "pending", "approved", "rejected", "all"
	Page          uint32                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaQueueRequest) Reset() {
	*x = GetMediaQueueRequest{}
	mi := &file_proto_media_share_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaQueueRequest) ProtoMessage() {}

func (x *GetMediaQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaQueueRequest.ProtoReflect.Descriptor instead.
func (*GetMediaQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{7}
}

func (x *GetMediaQueueRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

func (x *GetMediaQueueRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

func (x *GetMediaQueueRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMediaQueueRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetMediaQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*MediaShareItem      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          uint32                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPages    uint32                 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaQueueResponse) Reset() {
	*x = GetMediaQueueResponse{}
	mi := &file_proto_media_share_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaQueueResponse) ProtoMessage() {}

func (x *GetMediaQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaQueueResponse.ProtoReflect.Descriptor instead.
func (*GetMediaQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{8}
}

func (x *GetMediaQueueResponse) GetItems() []*MediaShareItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetMediaQueueResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetMediaQueueResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMediaQueueResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMediaQueueResponse) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type MediaShareItem struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DonationId        uint32                 `protobuf:"varint,2,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	StreamerId        uint32                 `protobuf:"varint,3,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	DonatorId         uint32                 `protobuf:"varint,4,opt,name=donator_id,json=donatorId,proto3" json:"donator_id,omitempty"`
	DonatorName       string                 `protobuf:"bytes,5,opt,name=donator_name,json=donatorName,proto3" json:"donator_name,omitempty"`
	MediaType         MediaType              `protobuf:"varint,6,opt,name=media_type,json=mediaType,proto3,enum=mediashar.media_share.MediaType" json:"media_type,omitempty"`
	MediaUrl          string                 `protobuf:"bytes,7,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	CustomTitle       string                 `protobuf:"bytes,8,opt,name=custom_title,json=customTitle,proto3" json:"custom_title,omitempty"`
	CustomDescription string                 `protobuf:"bytes,9,opt,name=custom_description,json=customDescription,proto3" json:"custom_description,omitempty"`
	ThumbnailUrl      string                 `protobuf:"bytes,10,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	DurationSeconds   uint32                 `protobuf:"varint,11,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	StartTime         uint32                 `protobuf:"varint,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime           uint32                 `protobuf:"varint,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status            MediaStatus            `protobuf:"varint,14,opt,name=status,proto3,enum=mediashar.media_share.MediaStatus" json:"status,omitempty"`
	DonationAmount    float64                `protobuf:"fixed64,15,opt,name=donation_amount,json=donationAmount,proto3" json:"donation_amount,omitempty"`
	SubmittedAt       *timestamp.Timestamp   `protobuf:"bytes,16,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	ProcessedAt       *timestamp.Timestamp   `protobuf:"bytes,17,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MediaShareItem) Reset() {
	*x = MediaShareItem{}
	mi := &file_proto_media_share_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaShareItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaShareItem) ProtoMessage() {}

func (x *MediaShareItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaShareItem.ProtoReflect.Descriptor instead.
func (*MediaShareItem) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{9}
}

func (x *MediaShareItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MediaShareItem) GetDonationId() uint32 {
	if x != nil {
		return x.DonationId
	}
	return 0
}

func (x *MediaShareItem) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

func (x *MediaShareItem) GetDonatorId() uint32 {
	if x != nil {
		return x.DonatorId
	}
	return 0
}

func (x *MediaShareItem) GetDonatorName() string {
	if x != nil {
		return x.DonatorName
	}
	return ""
}

func (x *MediaShareItem) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *MediaShareItem) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *MediaShareItem) GetCustomTitle() string {
	if x != nil {
		return x.CustomTitle
	}
	return ""
}

func (x *MediaShareItem) GetCustomDescription() string {
	if x != nil {
		return x.CustomDescription
	}
	return ""
}

func (x *MediaShareItem) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *MediaShareItem) GetDurationSeconds() uint32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *MediaShareItem) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MediaShareItem) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MediaShareItem) GetStatus() MediaStatus {
	if x != nil {
		return x.Status
	}
	return MediaStatus_MEDIA_STATUS_UNSPECIFIED
}

func (x *MediaShareItem) GetDonationAmount() float64 {
	if x != nil {
		return x.DonationAmount
	}
	return 0
}

func (x *MediaShareItem) GetSubmittedAt() *timestamp.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *MediaShareItem) GetProcessedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// Stats Messages
type GetMediaStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamerId    uint32                 `protobuf:"varint,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaStatsRequest) Reset() {
	*x = GetMediaStatsRequest{}
	mi := &file_proto_media_share_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaStatsRequest) ProtoMessage() {}

func (x *GetMediaStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaStatsRequest.ProtoReflect.Descriptor instead.
func (*GetMediaStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{10}
}

func (x *GetMediaStatsRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

type GetMediaStatsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalSubmissions    uint32                 `protobuf:"varint,1,opt,name=total_submissions,json=totalSubmissions,proto3" json:"total_submissions,omitempty"`
	PendingCount        uint32                 `protobuf:"varint,2,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	ApprovedCount       uint32                 `protobuf:"varint,3,opt,name=approved_count,json=approvedCount,proto3" json:"approved_count,omitempty"`
	RejectedCount       uint32                 `protobuf:"varint,4,opt,name=rejected_count,json=rejectedCount,proto3" json:"rejected_count,omitempty"`
	PlayedCount         uint32                 `protobuf:"varint,5,opt,name=played_count,json=playedCount,proto3" json:"played_count,omitempty"`
	TotalDonationAmount float64                `protobuf:"fixed64,6,opt,name=total_donation_amount,json=totalDonationAmount,proto3" json:"total_donation_amount,omitempty"`
	YoutubeCount        uint32                 `protobuf:"varint,7,opt,name=youtube_count,json=youtubeCount,proto3" json:"youtube_count,omitempty"`
	TiktokCount         uint32                 `protobuf:"varint,8,opt,name=tiktok_count,json=tiktokCount,proto3" json:"tiktok_count,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetMediaStatsResponse) Reset() {
	*x = GetMediaStatsResponse{}
	mi := &file_proto_media_share_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaStatsResponse) ProtoMessage() {}

func (x *GetMediaStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaStatsResponse.ProtoReflect.Descriptor instead.
func (*GetMediaStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{11}
}

func (x *GetMediaStatsResponse) GetTotalSubmissions() uint32 {
	if x != nil {
		return x.TotalSubmissions
	}
	return 0
}

func (x *GetMediaStatsResponse) GetPendingCount() uint32 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *GetMediaStatsResponse) GetApprovedCount() uint32 {
	if x != nil {
		return x.ApprovedCount
	}
	return 0
}

func (x *GetMediaStatsResponse) GetRejectedCount() uint32 {
	if x != nil {
		return x.RejectedCount
	}
	return 0
}

func (x *GetMediaStatsResponse) GetPlayedCount() uint32 {
	if x != nil {
		return x.PlayedCount
	}
	return 0
}

func (x *GetMediaStatsResponse) GetTotalDonationAmount() float64 {
	if x != nil {
		return x.TotalDonationAmount
	}
	return 0
}

func (x *GetMediaStatsResponse) GetYoutubeCount() uint32 {
	if x != nil {
		return x.YoutubeCount
	}
	return 0
}

func (x *GetMediaStatsResponse) GetTiktokCount() uint32 {
	if x != nil {
		return x.TiktokCount
	}
	return 0
}

// Management Messages
type ApproveMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       uint32                 `protobuf:"varint,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	StreamerId    uint32                 `protobuf:"varint,2,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveMediaRequest) Reset() {
	*x = ApproveMediaRequest{}
	mi := &file_proto_media_share_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveMediaRequest) ProtoMessage() {}

func (x *ApproveMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveMediaRequest.ProtoReflect.Descriptor instead.
func (*ApproveMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{12}
}

func (x *ApproveMediaRequest) GetMediaId() uint32 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

func (x *ApproveMediaRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

type ApproveMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveMediaResponse) Reset() {
	*x = ApproveMediaResponse{}
	mi := &file_proto_media_share_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveMediaResponse) ProtoMessage() {}

func (x *ApproveMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveMediaResponse.ProtoReflect.Descriptor instead.
func (*ApproveMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveMediaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ApproveMediaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RejectMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       uint32                 `protobuf:"varint,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	StreamerId    uint32                 `protobuf:"varint,2,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectMediaRequest) Reset() {
	*x = RejectMediaRequest{}
	mi := &file_proto_media_share_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectMediaRequest) ProtoMessage() {}

func (x *RejectMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectMediaRequest.ProtoReflect.Descriptor instead.
func (*RejectMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{14}
}

func (x *RejectMediaRequest) GetMediaId() uint32 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

func (x *RejectMediaRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

func (x *RejectMediaRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RejectMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectMediaResponse) Reset() {
	*x = RejectMediaResponse{}
	mi := &file_proto_media_share_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectMediaResponse) ProtoMessage() {}

func (x *RejectMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectMediaResponse.ProtoReflect.Descriptor instead.
func (*RejectMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{15}
}

func (x *RejectMediaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RejectMediaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Streaming Messages
type StreamMediaQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamerId    uint32                 `protobuf:"varint,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMediaQueueRequest) Reset() {
	*x = StreamMediaQueueRequest{}
	mi := &file_proto_media_share_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMediaQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMediaQueueRequest) ProtoMessage() {}

func (x *StreamMediaQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMediaQueueRequest.ProtoReflect.Descriptor instead.
func (*StreamMediaQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{16}
}

func (x *StreamMediaQueueRequest) GetStreamerId() uint32 {
	if x != nil {
		return x.StreamerId
	}
	return 0
}

type MediaQueueUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // "new_submission", "approved", "rejected", "played"
	MediaItem     *MediaShareItem        `protobuf:"bytes,2,opt,name=media_item,json=mediaItem,proto3" json:"media_item,omitempty"`
	QueuePosition uint32                 `protobuf:"varint,3,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaQueueUpdate) Reset() {
	*x = MediaQueueUpdate{}
	mi := &file_proto_media_share_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaQueueUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaQueueUpdate) ProtoMessage() {}

func (x *MediaQueueUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_share_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaQueueUpdate.ProtoReflect.Descriptor instead.
func (*MediaQueueUpdate) Descriptor() ([]byte, []int) {
	return file_proto_media_share_proto_rawDescGZIP(), []int{17}
}

func (x *MediaQueueUpdate) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *MediaQueueUpdate) GetMediaItem() *MediaShareItem {
	if x != nil {
		return x.MediaItem
	}
	return nil
}

func (x *MediaQueueUpdate) GetQueuePosition() uint32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *MediaQueueUpdate) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_proto_media_share_proto protoreflect.FileDescriptor

const file_proto_media_share_proto_rawDesc = "" +
	"\n" +
	"\x17proto/media_share.proto\x12\x15mediashar.media_share\x1a\x1fgoogle/protobuf/timestamp.proto\"5\n" +
	"\x12GetSettingsRequest\x12\x1f\n" +
	"\vstreamer_id\x18\x01 \x01(\rR\n" +
	"streamerId\"\\\n" +
	"\x13GetSettingsResponse\x12E\n" +
	"\bsettings\x18\x01 \x01(\v2).mediashar.media_share.MediaShareSettingsR\bsettings\"\x7f\n" +
	"\x15UpdateSettingsRequest\x12\x1f\n" +
	"\vstreamer_id\x18\x01 \x01(\rR\n" +
	"streamerId\x12E\n" +
	"\bsettings\x18\x02 \x01(\v2).mediashar.media_share.MediaShareSettingsR\bsettings\"\x93\x01\n" +
	"\x16UpdateSettingsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12E\n" +
	"\bsettings\x18\x03 \x01(\v2).mediashar.media_share.MediaShareSettingsR\bsettings\"\xd3\x03\n" +
	"\x12MediaShareSettings\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1f\n" +
	"\vstreamer_id\x18\x02 \x01(\rR\n" +
	"streamerId\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12.\n" +
	"\x13min_donation_amount\x18\x04 \x01(\x01R\x11minDonationAmount\x12'\n" +
	"\x0fyoutube_enabled\x18\x05 \x01(\bR\x0eyoutubeEnabled\x12%\n" +
	"\x0etiktok_enabled\x18\x06 \x01(\bR\rtiktokEnabled\x12!\n" +
	"\fauto_approve\x18\a \x01(\bR\vautoApprove\x120\n" +
	"\x14max_duration_seconds\x18\b \x01(\rR\x12maxDurationSeconds\x12'\n" +
	"\x0fwelcome_message\x18\t \x01(\tR\x0ewelcomeMessage\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x87\x03\n" +
	"\x17SubmitMediaShareRequest\x12\x1f\n" +
	"\vdonation_id\x18\x01 \x01(\rR\n" +
	"donationId\x12\x1f\n" +
	"\vstreamer_id\x18\x02 \x01(\rR\n" +
	"streamerId\x12\x1d\n" +
	"\n" +
	"donator_id\x18\x03 \x01(\rR\tdonatorId\x12!\n" +
	"\fdonator_name\x18\x04 \x01(\tR\vdonatorName\x12?\n" +
	"\n" +
	"media_type\x18\x05 \x01(\x0e2 .mediashar.media_share.MediaTypeR\tmediaType\x12\x1b\n" +
	"\tmedia_url\x18\x06 \x01(\tR\bmediaUrl\x12!\n" +
	"\fcustom_title\x18\a \x01(\tR\vcustomTitle\x12-\n" +
	"\x12custom_description\x18\b \x01(\tR\x11customDescription\x12\x1d\n" +
	"\n" +
	"start_time\x18\t \x01(\rR\tstartTime\x12\x19\n" +
	"\bend_time\x18\n" +
	" \x01(\rR\aendTime\"\xcc\x01\n" +
	"\x18SubmitMediaShareResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bmedia_id\x18\x03 \x01(\rR\amediaId\x12:\n" +
	"\x06status\x18\x04 \x01(\x0e2\".mediashar.media_share.MediaStatusR\x06status\x12%\n" +
	"\x0equeue_position\x18\x05 \x01(\rR\rqueuePosition\"\x8d\x01\n" +
	"\x14GetMediaQueueRequest\x12\x1f\n" +
	"\vstreamer_id\x18\x01 \x01(\rR\n" +
	"streamerId\x12#\n" +
	"\rstatus_filter\x18\x02 \x01(\tR\fstatusFilter\x12\x12\n" +
	"\x04page\x18\x03 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\rR\bpageSize\"\xbc\x01\n" +
	"\x15GetMediaQueueResponse\x12;\n" +
	"\x05items\x18\x01 \x03(\v2%.mediashar.media_share.MediaShareItemR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x04R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\rR\bpageSize\x12\x1f\n" +
	"\vtotal_pages\x18\x05 \x01(\rR\n" +
	"totalPages\"\xc1\x05\n" +
	"\x0eMediaShareItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1f\n" +
	"\vdonation_id\x18\x02 \x01(\rR\n" +
	"donationId\x12\x1f\n" +
	"\vstreamer_id\x18\x03 \x01(\rR\n" +
	"streamerId\x12\x1d\n" +
	"\n" +
	"donator_id\x18\x04 \x01(\rR\tdonatorId\x12!\n" +
	"\fdonator_name\x18\x05 \x01(\tR\vdonatorName\x12?\n" +
	"\n" +
	"media_type\x18\x06 \x01(\x0e2 .mediashar.media_share.MediaTypeR\tmediaType\x12\x1b\n" +
	"\tmedia_url\x18\a \x01(\tR\bmediaUrl\x12!\n" +
	"\fcustom_title\x18\b \x01(\tR\vcustomTitle\x12-\n" +
	"\x12custom_description\x18\t \x01(\tR\x11customDescription\x12#\n" +
	"\rthumbnail_url\x18\n" +
	" \x01(\tR\fthumbnailUrl\x12)\n" +
	"\x10duration_seconds\x18\v \x01(\rR\x0fdurationSeconds\x12\x1d\n" +
	"\n" +
	"start_time\x18\f \x01(\rR\tstartTime\x12\x19\n" +
	"\bend_time\x18\r \x01(\rR\aendTime\x12:\n" +
	"\x06status\x18\x0e \x01(\x0e2\".mediashar.media_share.MediaStatusR\x06status\x12'\n" +
	"\x0fdonation_amount\x18\x0f \x01(\x01R\x0edonationAmount\x12=\n" +
	"\fsubmitted_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\vsubmittedAt\x12=\n" +
	"\fprocessed_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"7\n" +
	"\x14GetMediaStatsRequest\x12\x1f\n" +
	"\vstreamer_id\x18\x01 \x01(\rR\n" +
	"streamerId\"\xd6\x02\n" +
	"\x15GetMediaStatsResponse\x12+\n" +
	"\x11total_submissions\x18\x01 \x01(\rR\x10totalSubmissions\x12#\n" +
	"\rpending_count\x18\x02 \x01(\rR\fpendingCount\x12%\n" +
	"\x0eapproved_count\x18\x03 \x01(\rR\rapprovedCount\x12%\n" +
	"\x0erejected_count\x18\x04 \x01(\rR\rrejectedCount\x12!\n" +
	"\fplayed_count\x18\x05 \x01(\rR\vplayedCount\x122\n" +
	"\x15total_donation_amount\x18\x06 \x01(\x01R\x13totalDonationAmount\x12#\n" +
	"\ryoutube_count\x18\a \x01(\rR\fyoutubeCount\x12!\n" +
	"\ftiktok_count\x18\b \x01(\rR\vtiktokCount\"Q\n" +
	"\x13ApproveMediaRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\rR\amediaId\x12\x1f\n" +
	"\vstreamer_id\x18\x02 \x01(\rR\n" +
	"streamerId\"J\n" +
	"\x14ApproveMediaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"h\n" +
	"\x12RejectMediaRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\rR\amediaId\x12\x1f\n" +
	"\vstreamer_id\x18\x02 \x01(\rR\n" +
	"streamerId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"I\n" +
	"\x13RejectMediaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\":\n" +
	"\x17StreamMediaQueueRequest\x12\x1f\n" +
	"\vstreamer_id\x18\x01 \x01(\rR\n" +
	"streamerId\"\xd8\x01\n" +
	"\x10MediaQueueUpdate\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12D\n" +
	"\n" +
	"media_item\x18\x02 \x01(\v2%.mediashar.media_share.MediaShareItemR\tmediaItem\x12%\n" +
	"\x0equeue_position\x18\x03 \x01(\rR\rqueuePosition\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*V\n" +
	"\tMediaType\x12\x1a\n" +
	"\x16MEDIA_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12MEDIA_TYPE_YOUTUBE\x10\x01\x12\x15\n" +
	"\x11MEDIA_TYPE_TIKTOK\x10\x02*\x94\x01\n" +
	"\vMediaStatus\x12\x1c\n" +
	"\x18MEDIA_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MEDIA_STATUS_PENDING\x10\x01\x12\x19\n" +
	"\x15MEDIA_STATUS_APPROVED\x10\x02\x12\x19\n" +
	"\x15MEDIA_STATUS_REJECTED\x10\x03\x12\x17\n" +
	"\x13MEDIA_STATUS_PLAYED\x10\x042\xf3\x06\n" +
	"\x11MediaShareService\x12d\n" +
	"\vGetSettings\x12).mediashar.media_share.GetSettingsRequest\x1a*.mediashar.media_share.GetSettingsResponse\x12m\n" +
	"\x0eUpdateSettings\x12,.mediashar.media_share.UpdateSettingsRequest\x1a-.mediashar.media_share.UpdateSettingsResponse\x12s\n" +
	"\x10SubmitMediaShare\x12..mediashar.media_share.SubmitMediaShareRequest\x1a/.mediashar.media_share.SubmitMediaShareResponse\x12j\n" +
	"\rGetMediaQueue\x12+.mediashar.media_share.GetMediaQueueRequest\x1a,.mediashar.media_share.GetMediaQueueResponse\x12j\n" +
	"\rGetMediaStats\x12+.mediashar.media_share.GetMediaStatsRequest\x1a,.mediashar.media_share.GetMediaStatsResponse\x12g\n" +
	"\fApproveMedia\x12*.mediashar.media_share.ApproveMediaRequest\x1a+.mediashar.media_share.ApproveMediaResponse\x12d\n" +
	"\vRejectMedia\x12).mediashar.media_share.RejectMediaRequest\x1a*.mediashar.media_share.RejectMediaResponse\x12m\n" +
	"\x10StreamMediaQueue\x12..mediashar.media_share.StreamMediaQueueRequest\x1a'.mediashar.media_share.MediaQueueUpdate0\x01B\"Z github.com/rzfd/mediashar/pkg/pbb\x06proto3"

var (
	file_proto_media_share_proto_rawDescOnce sync.Once
	file_proto_media_share_proto_rawDescData []byte
)

func file_proto_media_share_proto_rawDescGZIP() []byte {
	file_proto_media_share_proto_rawDescOnce.Do(func() {
		file_proto_media_share_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_media_share_proto_rawDesc), len(file_proto_media_share_proto_rawDesc)))
	})
	return file_proto_media_share_proto_rawDescData
}

var file_proto_media_share_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_media_share_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_media_share_proto_goTypes = []any{
	(MediaType)(0),                   // 0: mediashar.media_share.MediaType
	(MediaStatus)(0),                 // 1: mediashar.media_share.MediaStatus
	(*GetSettingsRequest)(nil),       // 2: mediashar.media_share.GetSettingsRequest
	(*GetSettingsResponse)(nil),      // 3: mediashar.media_share.GetSettingsResponse
	(*UpdateSettingsRequest)(nil),    // 4: mediashar.media_share.UpdateSettingsRequest
	(*UpdateSettingsResponse)(nil),   // 5: mediashar.media_share.UpdateSettingsResponse
	(*MediaShareSettings)(nil),       // 6: mediashar.media_share.MediaShareSettings
	(*SubmitMediaShareRequest)(nil),  // 7: mediashar.media_share.SubmitMediaShareRequest
	(*SubmitMediaShareResponse)(nil), // 8: mediashar.media_share.SubmitMediaShareResponse
	(*GetMediaQueueRequest)(nil),     // 9: mediashar.media_share.GetMediaQueueRequest
	(*GetMediaQueueResponse)(nil),    // 10: mediashar.media_share.GetMediaQueueResponse
	(*MediaShareItem)(nil),           // 11: mediashar.media_share.MediaShareItem
	(*GetMediaStatsRequest)(nil),     // 12: mediashar.media_share.GetMediaStatsRequest
	(*GetMediaStatsResponse)(nil),    // 13: mediashar.media_share.GetMediaStatsResponse
	(*ApproveMediaRequest)(nil),      // 14: mediashar.media_share.ApproveMediaRequest
	(*ApproveMediaResponse)(nil),     // 15: mediashar.media_share.ApproveMediaResponse
	(*RejectMediaRequest)(nil),       // 16: mediashar.media_share.RejectMediaRequest
	(*RejectMediaResponse)(nil),      // 17: mediashar.media_share.RejectMediaResponse
	(*StreamMediaQueueRequest)(nil),  // 18: mediashar.media_share.StreamMediaQueueRequest
	(*MediaQueueUpdate)(nil),         // 19: mediashar.media_share.MediaQueueUpdate
	(*timestamp.Timestamp)(nil),      // 20: google.protobuf.Timestamp
}
var file_proto_media_share_proto_depIdxs = []int32{
	6,  // 0: mediashar.media_share.GetSettingsResponse.settings:type_name -> mediashar.media_share.MediaShareSettings
	6,  // 1: mediashar.media_share.UpdateSettingsRequest.settings:type_name -> mediashar.media_share.MediaShareSettings
	6,  // 2: mediashar.media_share.UpdateSettingsResponse.settings:type_name -> mediashar.media_share.MediaShareSettings
	20, // 3: mediashar.media_share.MediaShareSettings.created_at:type_name -> google.protobuf.Timestamp
	20, // 4: mediashar.media_share.MediaShareSettings.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 5: mediashar.media_share.SubmitMediaShareRequest.media_type:type_name -> mediashar.media_share.MediaType
	1,  // 6: mediashar.media_share.SubmitMediaShareResponse.status:type_name -> mediashar.media_share.MediaStatus
	11, // 7: mediashar.media_share.GetMediaQueueResponse.items:type_name -> mediashar.media_share.MediaShareItem
	0,  // 8: mediashar.media_share.MediaShareItem.media_type:type_name -> mediashar.media_share.MediaType
	1,  // 9: mediashar.media_share.MediaShareItem.status:type_name -> mediashar.media_share.MediaStatus
	20, // 10: mediashar.media_share.MediaShareItem.submitted_at:type_name -> google.protobuf.Timestamp
	20, // 11: mediashar.media_share.MediaShareItem.processed_at:type_name -> google.protobuf.Timestamp
	11, // 12: mediashar.media_share.MediaQueueUpdate.media_item:type_name -> mediashar.media_share.MediaShareItem
	20, // 13: mediashar.media_share.MediaQueueUpdate.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 14: mediashar.media_share.MediaShareService.GetSettings:input_type -> mediashar.media_share.GetSettingsRequest
	4,  // 15: mediashar.media_share.MediaShareService.UpdateSettings:input_type -> mediashar.media_share.UpdateSettingsRequest
	7,  // 16: mediashar.media_share.MediaShareService.SubmitMediaShare:input_type -> mediashar.media_share.SubmitMediaShareRequest
	9,  // 17: mediashar.media_share.MediaShareService.GetMediaQueue:input_type -> mediashar.media_share.GetMediaQueueRequest
	12, // 18: mediashar.media_share.MediaShareService.GetMediaStats:input_type -> mediashar.media_share.GetMediaStatsRequest
	14, // 19: mediashar.media_share.MediaShareService.ApproveMedia:input_type -> mediashar.media_share.ApproveMediaRequest
	16, // 20: mediashar.media_share.MediaShareService.RejectMedia:input_type -> mediashar.media_share.RejectMediaRequest
	18, // 21: mediashar.media_share.MediaShareService.StreamMediaQueue:input_type -> mediashar.media_share.StreamMediaQueueRequest
	3,  // 22: mediashar.media_share.MediaShareService.GetSettings:output_type -> mediashar.media_share.GetSettingsResponse
	5,  // 23: mediashar.media_share.MediaShareService.UpdateSettings:output_type -> mediashar.media_share.UpdateSettingsResponse
	8,  // 24: mediashar.media_share.MediaShareService.SubmitMediaShare:output_type -> mediashar.media_share.SubmitMediaShareResponse
	10, // 25: mediashar.media_share.MediaShareService.GetMediaQueue:output_type -> mediashar.media_share.GetMediaQueueResponse
	13, // 26: mediashar.media_share.MediaShareService.GetMediaStats:output_type -> mediashar.media_share.GetMediaStatsResponse
	15, // 27: mediashar.media_share.MediaShareService.ApproveMedia:output_type -> mediashar.media_share.ApproveMediaResponse
	17, // 28: mediashar.media_share.MediaShareService.RejectMedia:output_type -> mediashar.media_share.RejectMediaResponse
	19, // 29: mediashar.media_share.MediaShareService.StreamMediaQueue:output_type -> mediashar.media_share.MediaQueueUpdate
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_media_share_proto_init() }
func file_proto_media_share_proto_init() {
	if File_proto_media_share_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_media_share_proto_rawDesc), len(file_proto_media_share_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_media_share_proto_goTypes,
		DependencyIndexes: file_proto_media_share_proto_depIdxs,
		EnumInfos:         file_proto_media_share_proto_enumTypes,
		MessageInfos:      file_proto_media_share_proto_msgTypes,
	}.Build()
	File_proto_media_share_proto = out.File
	file_proto_media_share_proto_goTypes = nil
	file_proto_media_share_proto_depIdxs = nil
}
