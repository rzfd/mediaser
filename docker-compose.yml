services:
  # Databases for each microservice
  gateway-db:
    image: postgres:15-alpine
    container_name: mediashar_gateway_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gateway_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - gateway_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mediashar_network

  donation-db:
    image: postgres:15-alpine
    container_name: mediashar_donation_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: donation_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - donation_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mediashar_network

  payment-db:
    image: postgres:15-alpine
    container_name: mediashar_payment_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payment_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - payment_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mediashar_network

  # Microservices
  donation-service:
    build:
      context: .
      dockerfile: Dockerfile.donation-service
    container_name: mediashar_donation_service
    ports:
      - "9091:9091"
    environment:
      # Database Configuration
      - DONATION_DB_HOST=donation-db
      - DONATION_DB_PORT=5432
      - DONATION_DB_USERNAME=postgres
      - DONATION_DB_PASSWORD=password
      - DONATION_DB_NAME=donation_db
      
      # Service Configuration
      - GRPC_PORT=9091
      - SERVICE_NAME=donation-service
      
      # External Service URLs
      - USER_SERVICE_URL=http://api-gateway:8080
    depends_on:
      donation-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mediashar_network
    healthcheck:
      test: ["CMD-SHELL", "netstat -an | grep :9091 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.payment-service
    container_name: mediashar_payment_service
    ports:
      - "9092:9092"
    environment:
      # Database Configuration
      - PAYMENT_DB_HOST=payment-db
      - PAYMENT_DB_PORT=5432
      - PAYMENT_DB_USERNAME=postgres
      - PAYMENT_DB_PASSWORD=password
      - PAYMENT_DB_NAME=payment_db
      
      # Service Configuration
      - GRPC_PORT=9092
      - SERVICE_NAME=payment-service
      
      # Midtrans Configuration
      - MIDTRANS_MERCHANT_ID=G454372620
      - MIDTRANS_CLIENT_KEY=SB-Mid-client-Yy6kDu1A1cTYWiYy
      - MIDTRANS_SERVER_KEY=SB-Mid-server-Zz8uCQ5-zrUcEEbes_ejiqnu
      - MIDTRANS_ENVIRONMENT=sandbox
    depends_on:
      payment-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mediashar_network
    healthcheck:
      test: ["CMD-SHELL", "netstat -an | grep :9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.notification-service
    container_name: mediashar_notification_service
    ports:
      - "9093:9093"
    environment:
      # Service Configuration
      - GRPC_PORT=9093
      - SERVICE_NAME=notification-service
    restart: unless-stopped
    networks:
      - mediashar_network
    healthcheck:
      test: ["CMD-SHELL", "netstat -an | grep :9093 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway
    container_name: mediashar_api_gateway
    ports:
      - "8080:8080"
    environment:
      - DONATION_SERVICE_URL=donation-service:9091
      - PAYMENT_SERVICE_URL=payment-service:9092
      - NOTIFICATION_SERVICE_URL=notification-service:9093
      - CURRENCY_SERVICE_URL=currency-service:8084
      - LANGUAGE_SERVICE_URL=language-service:8085
      - DB_HOST=gateway-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=gateway_db
      - JWT_SECRET=mediashar-secret-key-2024
    depends_on:
      - gateway-db
      - donation-service
      - payment-service
      - notification-service
      - currency-service
      - language-service
    restart: unless-stopped
    networks:
      - mediashar_network
    volumes:
      - ./cmd/api-gateway/configs/config.yaml:/app/config.yaml

  # Currency Service (NEW)
  currency-service:
    build:
      context: .
      dockerfile: ./build/docker/Dockerfile.currency-service
    ports:
      - "8084:8084"
      - "8094:8094"
    environment:
      - GRPC_PORT=8084
      - HTTP_PORT=8094
      - DB_HOST=currency-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=currency_db
      - EXCHANGE_RATE_API_URL=https://v6.exchangerate-api.com/v6/latest
      - CACHE_TTL=3600
    depends_on:
      - currency-db
    networks:
      - mediashar_network
    restart: unless-stopped

  # Language Service (NEW)
  language-service:
    build:
      context: .
      dockerfile: ./build/docker/Dockerfile.language-service
    ports:
      - "8085:8085"
      - "8095:8095"
    environment:
      - GRPC_PORT=8085
      - HTTP_PORT=8095
      - DB_HOST=language-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=language_db
      - LIBRETRANSLATE_API_URL=https://libretranslate.de/translate
      - TRANSLATION_CACHE_TTL=86400
    depends_on:
      - language-db
    networks:
      - mediashar_network
    restart: unless-stopped

  # React Frontend with Currency & Language Features
  mediashar-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mediashar_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_GATEWAY=http://localhost:8080
      - REACT_APP_BACKEND_URL=http://localhost:8080
      - REACT_APP_CURRENCY_API=http://localhost:8094
      - REACT_APP_LANGUAGE_API=http://localhost:8095
    depends_on:
      - api-gateway
      - currency-service
      - language-service
    restart: unless-stopped
    networks:
      - mediashar_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mediashar_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: 123
      PGADMIN_CONFIG_SERVER_MODE: 'True'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'True'
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - gateway-db
      - donation-db
      - payment-db
    restart: unless-stopped
    networks:
      - mediashar_network

  # Swagger UI for API documentation
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: mediashar_swagger
    ports:
      - "8083:8080"
    environment:
      - SWAGGER_JSON=/app/swagger.yaml
      - BASE_URL=/
      - DEEP_LINKING=true
      - DISPLAY_OPERATION_ID=true
      - DEFAULT_MODELS_EXPAND_DEPTH=1
      - DEFAULT_MODEL_EXPAND_DEPTH=1
      - DISPLAY_REQUEST_DURATION=true
      - DOC_EXPANSION=list
      - FILTER=true
      - SHOW_EXTENSIONS=true
      - SHOW_COMMON_EXTENSIONS=true
      - TRY_IT_OUT_ENABLED=true
    volumes:
      - ./docs/swagger.yaml:/app/swagger.yaml:ro
    restart: unless-stopped
    networks:
      - mediashar_network

  # Currency Database (NEW)
  currency-db:
    image: postgres:15-alpine
    container_name: currency_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: currency_db
    ports:
      - "5435:5432"
    volumes:
      - currency_db_data:/var/lib/postgresql/data
      - ./scripts/init-currency-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mediashar_network
    restart: unless-stopped

  # Language Database (NEW)
  language-db:
    image: postgres:15-alpine
    container_name: language_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: language_db
    ports:
      - "5436:5432"
    volumes:
      - language_db_data:/var/lib/postgresql/data
      - ./scripts/init-language-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mediashar_network
    restart: unless-stopped

volumes:
  gateway_data:
  donation_data:
  payment_data:
  pgadmin_data:
  currency_db_data:
  language_db_data:

networks:
  mediashar_network:
    driver: bridge 