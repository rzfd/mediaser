version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mediashar_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: donation_system
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mediashar_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mediashar_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mediashar.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - mediashar_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mediashar_app
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=donation_system
      
      # Server Configuration
      - SERVER_PORT=8080
      - SERVER_ENV=development
      
      # Authentication
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_TOKEN_EXPIRY_HOURS=24
      
      # Midtrans Configuration (Sandbox) - User's valid credentials
      - MIDTRANS_MERCHANT_ID=G454372620
      - MIDTRANS_CLIENT_KEY=SB-Mid-client-Yy6kDu1ATcTYWiYy
      - MIDTRANS_SERVER_KEY=SB-Mid-server-Z28uCQ5-zrUcEEbes_eijqnu
      - MIDTRANS_ENVIRONMENT=sandbox
      
      # Payment Configuration (Optional)
      - PAYPAL_CLIENT_ID=your-paypal-client-id
      - PAYPAL_CLIENT_SECRET=your-paypal-client-secret
      - STRIPE_SECRET_KEY=your-stripe-secret-key
      - WEBHOOK_SECRET=your-webhook-secret-key
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mediashar_network
    # Add health check for the app
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: mediashar_frontend
    ports:
      - "8000:80"
    environment:
      # Frontend configuration
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mediashar_network
    # Health check for frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      # Optional: Mount logs for debugging
      - frontend_logs:/var/log/nginx

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: mediashar_swagger
    ports:
      - "8083:8080"
    environment:
      - SWAGGER_JSON=/app/swagger.yaml
      - BASE_URL=/
      - DEEP_LINKING=true
      - DISPLAY_OPERATION_ID=true
      - DEFAULT_MODELS_EXPAND_DEPTH=1
      - DEFAULT_MODEL_EXPAND_DEPTH=1
      - DISPLAY_REQUEST_DURATION=true
      - DOC_EXPANSION=list
      - FILTER=true
      - SHOW_EXTENSIONS=true
      - SHOW_COMMON_EXTENSIONS=true
      - TRY_IT_OUT_ENABLED=true
    volumes:
      - ./docs/swagger.yaml:/app/swagger.yaml:ro
    restart: unless-stopped
    networks:
      - mediashar_network

  # Testing tools
  curl:
    image: curlimages/curl:latest
    container_name: mediashar_test_client
    networks:
      - mediashar_network
    depends_on:
      - app
      - frontend
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    profiles:
      - testing  # Only start when testing profile is used

volumes:
  postgres_data:
  pgadmin_data:
  frontend_logs:

networks:
  mediashar_network:
    driver: bridge 